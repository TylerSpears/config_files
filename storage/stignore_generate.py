# coding=utf8

import os
import pathlib
import argparse
import re

# parse command line arguments
parser = argparse.ArgumentParser(
    description="Generate file and directory paths for syncthing to ignore")
parser.add_argument(
    '-s', '--source',
    default='.',#pathlib.Path(os.getcwd()),
    type=pathlib.Path,
    help="Starting directory for recursive scan")
parser.add_argument(
    '-t', '--target',
    default='.stignore_generated',
    type=argparse.FileType('w+t'),
    help="Target file for writing; use '-' to print to stdout")
args = parser.parse_args()

# tuple of regex pattern strings that match files and dirs that are to be
# ignored
# ignore_regexes = (
#     r"^(?P<repo_dir>/?(?:(?:(?![/\b]).)+/)+)(?:.git/?)$",   # git repositories
#     r"^(?P<repo_dir>/?(?:(?:(?![/\b]).)+/)+)(?:.datalad/?)$",   # datalad repo
# )

# give regexes for matches to ignore
ignore_regs = {}
# list regexes for directories that indicate the parent dir should be ignored
ignore_regs['dirs'] = (
    r"^.git",
    r"^.datalad$",
)
if len(ignore_regs['dirs']) > 0:
    ignore_regs['dirs'] = re.compile(r'|'.join(ignore_regs['dirs']))
else:
    ignore_regs['dirs'] = False
# list regexes for files that indicate the parent dir should be ignored
ignore_regs['files'] = (

)
if len(ignore_regs['files']) > 0:
    ignore_regs['files'] = re.compile(r'|'.join(ignore_regs['files']))
else:
    ignore_regs['files'] = False

# collect ignored dirs
ignored_dirs = []
for parent_dir, subdirs, files in os.walk(str(args.source), followlinks=False):
    # check subdirectories
    if ignore_regs['dirs']:
        match_list = list(filter(ignore_regs['dirs'].search, subdirs))
        if match_list and match_list[0]:
            ignored_dirs.append(str(pathlib.Path(parent_dir)))
            del subdirs, files
            continue
    if ignore_regs['files']:
        match_list = list(filter(ignore_regs['files'].search, files))
        if match_list and match_list[0]:
            print("Matched file: ", match_list, files)
            ignored_dirs.append(str(pathlib.Path(parent_dir)))
            del subdirs, files
            continue

# allow syncthing to delete ignored directories
ignored_dirs = ['(?d)/' + ignored_dir + '/' for ignored_dir in ignored_dirs]

# write out ignore rules to file 
generated_doc_string = """
// Ignore patterns for syncthing, used with `#include .stignore_generated`
// Uses an external script to manually select files and directories to ignore,
// to compensate for syncthing's limited ignore syntax.
// WARNING: This file is automatically generated; 
// changes made manually will likely be overwritten and discarded.
// All listed directories are relative to: {}
""".format(os.path.abspath(args.source))

args.target.write(generated_doc_string + '\n')
args.target.writelines('\n'.join(ignored_dirs))
args.target.write('\n')
args.target.close()
